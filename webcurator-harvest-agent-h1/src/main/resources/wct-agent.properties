#HarvestAgent

# name of the directory where the temporary harvest data is stored
harvestAgent.baseHarvestDirectory=${harvest.dir}
# agent protocol type that the core knows about
harvestAgent.scheme=${agent.scheme}
# agent host name or ip address that the core knows about
harvestAgent.host=${agent.host}
# the port the agent is listening on for http connections
harvestAgent.port=${agent.port}
# the max number of harvest to be run concurrently on this agent
harvestAgent.maxHarvests=${agent.maxHarvests}
# the name of the agent. must be unique
harvestAgent.name=${agent.name}
# the note to send with the harvest result.
harvestAgent.provenanceNote=Original Harvest
# the number of alerts that occur before a notification is sent
harvestAgent.alertThreshold=200


#HarvestCoordinatorNotifier
# the host protocol type of the core
harvestCoordinatorNotifier.scheme=${core.scheme}
# the host name or ip address of the core
harvestCoordinatorNotifier.host=${core.host}
# the port that the core is listening on for http connections 
harvestCoordinatorNotifier.port=${core.port}


#DigitalAssetStore
# the host protocol type of the digital asset store
digitalAssetStore.scheme=${das.scheme}
# the host name or ip address of the digital asset store
digitalAssetStore.host=${das.host}
# the port that the digital asset store is listening on for http connections
digitalAssetStore.port=${das.port}


#HarvestCompleteConfig
# number of retries before increasing the wait time for level 1 to level 2
harvestCompleteConfig.levelRetryBand=3
# number of seconds to wait after a failure to complete a harvest (level 1)
harvestCompleteConfig.waitOnFailureLevelOneSecs=300
# number of seconds to wait after a failure to complete a harvest (level 2)
harvestCompleteConfig.waitOnFailureLevelTwoSecs=600
# number of seconds to wait after the harvester says it is finished 
harvestCompleteConfig.waitOnCompleteSeconds=30


#MemoryChecker
# The amount of memory in KB that can be used before a warning notification is sent
memoryChecker.warnThreshold=384000
# The amount of memory in KB that can be used before an error notification is sent
memoryChecker.errorThreshold=512000


#ProcessorCheck
# The minimum percentage of processor available before a warning notification is sent
processorCheck.warnThreshold=30
# The minimum percentage of processor available before an error notification is sent
processorCheck.errorThreshold=20


#DiskSpaceChecker
# the percentage of disk used before a warning notification is sent 
diskSpaceChecker.warnThreshold=80
# the percentage of disk used before an error notification is sent 
diskSpaceChecker.errorThreshold=90


#Triggers
# startDelay: delay before running the job measured in milliseconds
# repeatInterval: repeat every xx milliseconds (Note that once a day is 86,400,000 millseconds)

heartbeatTrigger.startDelay=10000
heartbeatTrigger.repeatInterval=30000

checkProcessorTrigger.startDelay=15000
checkProcessorTrigger.repeatInterval=30000