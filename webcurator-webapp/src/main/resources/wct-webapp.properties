
#Hibernate settings

hibernate.dialect=${schema.dialect}
hibernate.default_schema=${schema.name}

#LDAP Settings
ldap.enable=${ldap.enabled}
ldap.url=${ldap.url.build}
ldap.usrSearchBase=${ldap.usr.search.base}
ldap.usrSearchFilter=${ldap.usr.search.filter}
ldap.groupSearchBase=${ldap.group.search.base}
ldap.groupSearchFilter=${ldap.group.search.filter}
ldap.contextSource.root=${ldap.contextsource.root}
ldap.contextSource.manager.dn=${ldap.contextsource.manager.dn}
ldap.contextSource.managerPassword=${ldap.contextsource.manager.password}

# name of the directory where the h3 scripts are stored
h3.scriptsDirectory=${h3scripts.dir}

#DigitalAssetStore settings

digitalAssetStore.scheme=${das.scheme}
digitalAssetStore.host=${das.host}
digitalAssetStore.port=${das.port}
digitalAssetStoreServer.uploadedFilesDir=${das.uploaded.dir}

#HarvestAgent settings

harvestAgent.host=${agent.host}
harvestAgent.port=${agent.port}


#HarvestCoordinator settings

harvestCoordinator.minimumBandwidth=10
harvestCoordinator.maxBandwidthPercent=80
harvestCoordinator.daysBeforeDASPurge=14
harvestCoordinator.daysBeforeAbortedTargetInstancePurge=7
harvestCoordinator.autoQAUrl=http://${core.host}:${core.port}/wct-aqa-client/WCTClient/autoQA
harvestCoordinator.harvestOptimizationEnabled=true
harvestCoordinator.harvestOptimizationLookaheadHours=12
harvestCoordinator.numHarvestersExcludedFromOptimisation=0
#harvestCoordinator.autoQAUrl=

#TargetInstanceManager settings

targetInstanceManager.storeSeedHistory=true


#TargetManager settings

targetManager.allowMultiplePrimarySeeds=true


#HarvestAgentFactory settings

harvestAgentFactory.daysToSchedule=90


#InTrayManager settings

inTrayManager.sender=${intray.reply.email}
inTrayManager.wctBaseUrl=http://${core.host}:${core.port}/


#MailServer settings

mailServer.smtp.host=${mail.host}
mail.smtp.port=${mail.port}


#BandwidthChecker settings

bandwidthChecker.warnThreshold=95
bandwidthChecker.errorThreshold=100


#GroupSearchController settings

groupSearchController.defaultSearchOnAgencyOnly=true

#GroupTypes settings

groupTypes.subgroup=Sub-Group
groupTypes.subgroupSeparator=\ > 

#QualityReviewToolController settings

qualityReviewToolController.enableBrowseTool=true
qualityReviewToolController.enableAccessTool=true
##qualityReviewToolController.archiveUrl=http://web.archive.org/web/*/
qualityReviewToolController.archiveUrl=http://localhost:8090/wayback/*/
#The following three values are optional
qualityReviewToolController.archiveName=ArchiveOne
qualityReviewToolController.archive.alternative=http://localhosttwo:8090/wayback/*/
qualityReviewToolController.archive.alternative.name=ArchiveTwo

#QueueController settings
queueController.enableQaModule=true
# modification note applied when a harvest is auto-pruned
queueController.autoPrunedNote=Auto-pruned
# configured width of the QA thumbnail preview
queueController.thumbnailWidth=200px;
# configured height of the QA thumbnail preview
queueController.thumbnailHeight=100px;
# configured thumbnail renderer (browseTool or accessTool)
# browseTool = internal review tool
# accessTool = external Wayback access tool
# any other value = disable thumbnails (must be specified)
queueController.thumbnailRenderer=

#HarvestResourceUrlMapper settings

#Used to rewrite urls to use an external Quality Review Tool. Note that for use
#with Wayback, the Wayback indexer should be enabled in wct-das.properties
#Available substitution values:

# {$HarvestResult.Oid}
# {$HarvestResult.HarvestNumber}
# {$HarvestResult.State}
# {$HarvestResult.CreationDate,yyyyMMdd}
# {$HarvestResult.DerivedFrom}
# {$HarvestResult.ProvenanceNote}
# {$HarvestResource.Oid}
# {$HarvestResource.Name}
# {$HarvestResource.Length}
# {$HarvestResource.StatusCode}
# {$ArcHarvestResource.FileDate}

harvestResourceUrlMapper.urlMap=http://localhost:8090/wayback/{$ArcHarvestResource.FileDate}/{$HarvestResource.Name}


#BrowseHelper settings

browseHelper.prefix=http://${core.host}:${core.port}/curator/tools/browse


#ArchiveAdapter settings

archiveAdapter.targetReferenceMandatory=false


#Triggers

# startDelay: delay before running the job measured in milliseconds
# repeatInterval: repeat every xx milliseconds (Note that once a day is 86,400,000 millseconds)

processScheduleTrigger.startDelay=10000
processScheduleTrigger.repeatInterval=30000

bandwidthCheckTrigger.startDelay=15000
bandwidthCheckTrigger.repeatInterval=30000

checkProcessorTrigger.startDelay=15000
checkProcessorTrigger.repeatInterval=30000

purgeDigitalAssetsTrigger.repeatInterval=432000000

purgeAbortedTargetInstancesTrigger.repeatInterval=86400000

groupExpiryJobTrigger.startDelay=15000
groupExpiryJobTrigger.repeatInterval=86400000

createNewTargetInstancesTrigger.schedulesPerBatch=1000
createNewTargetInstancesTrigger.startDelay=60000
createNewTargetInstancesTrigger.repeatInterval=86400000

# the access url to use for the Web Archive to search for a specific target
qualityReviewToolController.webArchiveTarget=http://www.webarchive.org.uk/ukwa/target/


# H3 crawl politeness settings

crawlPoliteness.polite.delayFactor=10.0
crawlPoliteness.polite.minDelayMs=9000
crawlPoliteness.polite.MaxDelayMs=90000
crawlPoliteness.polite.respectCrawlDelayUpToSeconds=180
crawlPoliteness.polite.maxPerHostBandwidthUsageKbSec=400

crawlPoliteness.medium.delayFactor=5.0
crawlPoliteness.medium.minDelayMs=3000
crawlPoliteness.medium.MaxDelayMs=30000
crawlPoliteness.medium.respectCrawlDelayUpToSeconds=30
crawlPoliteness.medium.maxPerHostBandwidthUsageKbSec=800

crawlPoliteness.aggressive.delayFactor=1.0
crawlPoliteness.aggressive.minDelayMs=1000
crawlPoliteness.aggressive.MaxDelayMs=10000
crawlPoliteness.aggressive.respectCrawlDelayUpToSeconds=2
crawlPoliteness.aggressive.maxPerHostBandwidthUsageKbSec=2000
