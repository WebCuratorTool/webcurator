plugins {
    id 'org.springframework.boot' version '2.1.7.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = 'https://repo1.maven.org/maven2'
    }
    maven {
        url = 'https://repo.spring.io/plugins-release'
    }
    maven {
        url = 'https://repo.maven.apache.org/maven2'
    }
}

group = 'org.webcurator'
version = '3.0.0-SNAPSHOT'
description = 'Web Curator Tool WebApp'

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

// this needs to be set after the 'java' plugin has been applied
sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    publishableArtifacts
}

dependencies {
    implementation('org.webcurator:webcurator-db-repository:3.0.0-SNAPSHOT') {
        // Use Spring boot logging.
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
    implementation('org.netpreserve.openwayback:openwayback-core:2.4.0') {
        exclude group: 'org.netpreserve.commons', module: 'webarchive-commons'
    }
    implementation('org.apache.tiles:tiles-jsp:3.0.8') {
        // Use Spring boot logging.
        exclude group: 'org.slf4j', module: 'slf4j-api'
        exclude group: 'org.slf4j', module: 'jcl-over-slf4j'
    }
    implementation 'javax.servlet:jstl:1.2'
    implementation 'commons-fileupload:commons-fileupload:1.4'
    implementation 'commons-dbcp:commons-dbcp:1.4'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'mysql:mysql-connector-java:5.1.6'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    implementation 'com.h2database:h2:1.4.199'
//    implementation 'mysql:mysql-connector-java:8.0.21'
    implementation 'mysql:mysql-connector-java:5.1.6'
    implementation 'com.oracle:ojdbc6:11.2.0.3'
    implementation 'org.postgresql:postgresql:42.2.11'

    implementation 'commons-pool:commons-pool:1.3.1-heritrix-1.14.2-webcuratortool-2.0.1'
    implementation 'org.webcurator:webcurator-core:3.0.0-SNAPSHOT'

    // NOTE: This is a workaround so that gradle brings in the tests jar.
    testImplementation group: 'org.webcurator', name: 'webcurator-core', version: '3.0.0-SNAPSHOT', classifier: 'tests', {
        // Use Spring boot logging.
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'junit:junit:4.12'
    implementation 'org.apache.directory.server:apacheds-server-jndi:1.5.5'

    providedCompile 'org.apache.taglibs:taglibs-standard-impl:1.2.5'
    providedCompile 'org.apache.tomcat.embed:tomcat-embed-jasper:9.0.21'

}

// just an alias
task install(dependsOn: ['bootWar', 'publishToMavenLocal'])

war {
    includeEmptyDirs = false
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from(sourceSets.main.allJava)
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.web
            artifact tasks.sourcesJar
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

build.dependsOn war, sourcesJar

def updateVersion() {
    println sourceSets.main.output.resourcesDir

    def configFile = new File(sourceSets.main.output.resourcesDir, 'application.properties')

    println "updating version to '${version}' in ${configFile}"
    String configContent = configFile.getText('UTF-8')
    configContent = configContent.replaceAll(/project\.version=.*/, "project.version=${version}")
    configFile.write(configContent, 'UTF-8')
}

allprojects {
    updateVersion()
}
