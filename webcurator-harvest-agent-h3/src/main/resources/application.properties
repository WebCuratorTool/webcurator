#####################################
# Harvest Agent H3 configuration
#####################################


# Overriding Configuration
#####################################
# The active profile. For example, 'local' will use application-local.properties to override the properties found in
# this file. This can also be set on the command line using: -Dspring.profile.active=local
spring.profiles.active=local


# Spring core settings
#####################################

server.servlet.application-display-name=HarvestAgentH3

# Port that the Harvest Agent app will run on
# cannot have the same port as anything else on the same host.
server.port = 8083

## We don't want any dataSource functionality
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration

## QuartzProperties
spring.quartz.job-store-type=memory
spring.quartz.properties.org.quartz.threadPool.threadCount=3


# Harvest Agent core settings
#####################################

# name of the directory where the temporary harvest data is stored
harvestAgent.baseHarvestDirectory=/usr/local/wct/harvest-agent
# agent service url that the core knows about
harvestAgent.baseUrl=http://localhost:${server.port}
# agent protocol type that the core knows about
harvestAgent.scheme=http
# agent host name or ip address that the core knows about
harvestAgent.host=localhost
# the port the agent is listening on for http connections
harvestAgent.port=${server.port}
# the max number of harvest to be run concurrently on this agent
harvestAgent.maxHarvests=5
# the name of the agent. must be unique
harvestAgent.name=Local Agent H3
# the note to send with the harvest result.
harvestAgent.provenanceNote=Original Harvest
# the number of alerts that occur before a notification is sent
harvestAgent.alertThreshold=200
# whether to attempt to recover running harvests from H3 instance on startup.
harvestAgent.attemptHarvestRecovery=true
# wether to tell H3 to resume a crawl from a checkpoint during recovery (requires enabling of checkpoints in the profile)
harvestAgent.useCheckpoints=false

# Allowed Agencies
# a comma separated list of WCT Agencies that are allowed to harvest with this Agent.
# an empty list, allows any agency to harvest.
harvestAgent.allowedAgencies=


# WebApp settings
#####################################

# the base service url of Webapp
harvestCoordinatorNotifier.baseUrl=http://localhost:8080/wct

# Digital Asset Store settings
#####################################

# the base service url of the digital asset store
digitalAssetStore.baseUrl=http://localhost:8082
# the file transfer mode from harvest agent to store component:
# 1) copy: when Harvest Agent and Store Component are deployed on the same machine; 
# 2) stream: when Harvest Agent and Store Component are distributed deployed on different machines;
digitalAssetStore.fileUploadMode=copy


# Heritrix 3 Wrapper settings
#####################################

# The H3 instance scheme.
h3Wrapper.scheme=https
# The H3 instance host.
h3Wrapper.host=localhost
# The H3 instance port.
h3Wrapper.port=8443
# The H3 instance full path and filename for the keystore file.
h3Wrapper.keyStoreFile=''
# The H3 instance password for the keyStore file
h3Wrapper.keyStorePassword=''
# The H3 instance userName.
h3Wrapper.userName=admin
# The H3 instance password.
h3Wrapper.password=admin


# Harvest Agent additional settings
#####################################

#HarvestCompleteConfig

# number of retries before increasing the wait time for level 1 to level 2
harvestCompleteConfig.levelRetryBand=3
# number of seconds to wait after a failure to complete a harvest (level 1)
harvestCompleteConfig.waitOnFailureLevelOneSecs=300
# number of seconds to wait after a failure to complete a harvest (level 2)
harvestCompleteConfig.waitOnFailureLevelTwoSecs=600
# number of seconds to wait after the harvester says it is finished 
harvestCompleteConfig.waitOnCompleteSeconds=30

#MemoryChecker

# The amount of memory in KB that can be used before a warning notification is sent
memoryChecker.warnThreshold=384000
# The amount of memory in KB that can be used before an error notification is sent
memoryChecker.errorThreshold=512000

#ProcessorCheck

# The minimum percentage of processor available before a warning notification is sent
processorCheck.warnThreshold=30
# The minimum percentage of processor available before an error notification is sent
processorCheck.errorThreshold=20

#DiskSpaceChecker

# the percentage of disk used before a warning notification is sent 
diskSpaceChecker.warnThreshold=80
# the percentage of disk used before an error notification is sent 
diskSpaceChecker.errorThreshold=90

#Triggers

# startDelay: delay before running the job measured in milliseconds
# repeatInterval: repeat every xx milliseconds (Note that once a day is 86,400,000 millseconds)

heartbeatTrigger.startDelay=10000
heartbeatTrigger.repeatInterval=30000

checkProcessorTrigger.startDelay=15000
checkProcessorTrigger.repeatInterval=30000

# Logging settings
#####################################
        
# For more details see https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-logging.html
# Note that Spring takes logging.dir and puts its value into LOG_PATH, which is used in the logback-spring.xml configuration file.
logging.path=logs/
# logging.level.<logger-name>=<level> where level is one of TRACE, DEBUG, INFO, WARN, ERROR, FATAL, or OFF.
# The root logger can be configured by using logging.level.root
logging.level.root=ERROR
logging.level.org.webcurator=DEBUG
logging.level.org.springframework=INFO
logging.level.org.archive.crawler=WARN
logging.level.org.webcurator.core.check=INFO
logging.level.org.apache.commons.httpclient=ERROR
