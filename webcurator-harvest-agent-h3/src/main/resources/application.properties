#HarvestAgent

server.port = 8083

# name of the directory where the temporary harvest data is stored
harvestAgent.baseHarvestDirectory=/usr/local/wct/harvest-agent
# agent host name or ip address that the core knows about
harvestAgent.host=${agent.host:localhost}
# the port the agent is listening on for http connections
harvestAgent.port=${agent.port:8083}
# the max number of harvest to be run concurrently on this agent
harvestAgent.maxHarvests=5
# the name of the agent. must be unique
harvestAgent.name=${agent.name:H3 Agent}
# the note to send with the harvest result.
harvestAgent.provenanceNote=Original Harvest
# the number of alerts that occur before a notification is sent
harvestAgent.alertThreshold=200
# whether to attempt to recover running harvests from H3 instance on startup.
harvestAgent.attemptHarvestRecovery=true

# Heritrix3 Wrapper Configuration
# The H3 instance host.
h3Wrapper.scheme=${h3Instance.scheme:https}
# The H3 instance host.
h3Wrapper.host=${h3Instance.host:localhost}
# The H3 instance port.
h3Wrapper.port=${h3Instance.port:8443}
# The H3 instance full path and filename for the keystore file.
h3Wrapper.keyStoreFile=${h3Instance.keyStoreFile:''}
# The H3 instance password for the keyStore file
h3Wrapper.keyStorePassword=${h3Instance.keyStorePassword:''}
# The H3 instance userName.
h3Wrapper.userName=${h3Instance.userName:admin}
# The H3 instance password.
h3Wrapper.password=${h3Instance.password:admin}

#HarvestCoordinatorNotifier
# the host protocol type of the core
harvestCoordinatorNotifier.scheme=${core.scheme:http}
# the host name or ip address of the core
harvestCoordinatorNotifier.host=${core.host:localhost}
# the port that the core is listening on for http connections 
harvestCoordinatorNotifier.port=${core.port:8080}


#DigitalAssetStore
# the host protocol type of the digital asset store
digitalAssetStore.scheme=${das.scheme:http}
# the host name or ip address of the digital asset store
digitalAssetStore.host=${das.host:localhost}
# the port that the digital asset store is listening on for http connections
digitalAssetStore.port=${das.port:8082}


#HarvestCompleteConfig

# number of retries before increasing the wait time for level 1 to level 2
harvestCompleteConfig.levelRetryBand=3
# number of seconds to wait after a failure to complete a harvest (level 1)
harvestCompleteConfig.waitOnFailureLevelOneSecs=300
# number of seconds to wait after a failure to complete a harvest (level 2)
harvestCompleteConfig.waitOnFailureLevelTwoSecs=600
# number of seconds to wait after the harvester says it is finished 
harvestCompleteConfig.waitOnCompleteSeconds=30


#MemoryChecker

# The amount of memory in KB that can be used before a warning notification is sent
memoryChecker.warnThreshold=384000
# The amount of memory in KB that can be used before an error notification is sent
memoryChecker.errorThreshold=512000

#ProcessorCheck

# The minimum percentage of processor available before a warning notification is sent
processorCheck.warnThreshold=30
# The minimum percentage of processor available before an error notification is sent
processorCheck.errorThreshold=20

#DiskSpaceChecker

# the percentage of disk used before a warning notification is sent 
diskSpaceChecker.warnThreshold=80
# the percentage of disk used before an error notification is sent 
diskSpaceChecker.errorThreshold=90


#Triggers

# startDelay: delay before running the job measured in milliseconds
# repeatInterval: repeat every xx milliseconds (Note that once a day is 86,400,000 millseconds)

heartbeatTrigger.startDelay=10000
heartbeatTrigger.repeatInterval=30000

checkProcessorTrigger.startDelay=15000
checkProcessorTrigger.repeatInterval=30000

# The active profile. For example, 'local' will use application-local.properties to override the properties found in
# this file. This can also be set on the command line using: -Dspring.profile.active=local
spring.profiles.active=local

## We don't want any dataSource functionality
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration

## QuartzProperties
spring.quartz.job-store-type=memory
spring.quartz.properties.org.quartz.threadPool.threadCount=3

## Logging configuration
# For more details see https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-logging.html
# Note that Spring takes logging.dir and puts its value into LOG_PATH, which is used in the logback-spring.xml configuration file.
logging.path=logs/
# logging.level.<logger-name>=<level> where level is one of TRACE, DEBUG, INFO, WARN, ERROR, FATAL, or OFF.
# The root logger can be configured by using logging.level.root
logging.level.root=ERROR
logging.level.org.webcurator=INFO
logging.level.org.springframework=INFO
logging.level.org.archive.crawler=WARN
logging.level.org.webcurator.core.check=INFO
logging.level.org.apache.commons.httpclient=ERROR