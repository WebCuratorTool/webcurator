plugins {
    id 'java'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.5.12'
    id 'war'
}

repositories {
    mavenLocal()
    mavenCentral()
//    jcenter()
//    maven {
//        url = 'https://builds.archive.org/maven2'
//    }
    
    maven {
        url = 'https://repo.maven.apache.org/maven2'
    }

    maven{
        url = 'https://repository.cloudera.com/artifactory/libs-release-local/'
    }
}

dependencies {
    // This artifact no longer exists in public repos and we don't seem to need it
    //implementation 'com.sun.jmx:jmxri:1.2.1'
    compile 'log4j:log4j:1.2.17'
    compile 'org.quartz-scheduler:quartz:2.3.1'
    compile 'com.sun.xml.bind:jaxb-impl:2.3.2'
    compile 'com.sun.xml.bind:jaxb-core:2.3.0'
    compile 'javax.xml.bind:jaxb-api:2.3.0'
    compile 'org.webcurator:webcurator-core:3.2.4-SNAPSHOT'
    compile 'org.netarchivesuite:heritrix3-wrapper:1.0.3'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.9.5'
// https://mvnrepository.com/artifact/org.seleniumhq.webdriver/webdriver-selenium
    implementation group: 'org.seleniumhq.webdriver', name: 'webdriver-selenium', version: '0.9.7376'
// https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-api
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-api', version: '3.141.59'
// https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-chrome-driver
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version: '3.141.59'
// https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-support
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-support', version: '3.141.59'
// https://mvnrepository.com/artifact/ru.yandex.qatools.ashot/ashot
    implementation group: 'ru.yandex.qatools.ashot', name: 'ashot', version: '1.5.4'
}

group = 'org.webcurator'
version = '3.2.4-SNAPSHOT'
description = 'Harvest Agent - Heritrix 3.x'
sourceCompatibility = '1.8'

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from(sourceSets.main.allJava)
}

// just an alias
task install(dependsOn: ['bootJar', 'publishToMavenLocal'])

jar {
    enabled = true
}

bootJar {
    classifier = 'application'
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
            artifact(sourcesJar)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
